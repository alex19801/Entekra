// <auto-generated />
using System;
using Entekra.Data.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Entekra.Data.Migrations
{
    [DbContext(typeof(EntekraContext))]
    partial class EntekraContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Entekra.Data.Models.Checklist", b =>
                {
                    b.Property<int>("ChecklistId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ChecklistExternalId")
                        .HasColumnType("int");

                    b.Property<string>("ChecklistName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ChecklistNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("Closed")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int?>("ProjectId")
                        .HasColumnType("int");

                    b.HasKey("ChecklistId")
                        .HasName("PK_ChecklistId")
                        .HasAnnotation("SqlServer:Clustered", false);

                    b.HasIndex("ProjectId");

                    b.ToTable("Checklist");
                });

            modelBuilder.Entity("Entekra.Data.Models.Expirated24HChecklist", b =>
                {
                    b.Property<int>("Expirated24HChecklistId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ChecklistExternalId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("ProjectExternalId")
                        .HasColumnType("int");

                    b.HasKey("Expirated24HChecklistId")
                        .HasName("PK_Expirated24HChecklist")
                        .HasAnnotation("SqlServer:Clustered", false);

                    b.ToTable("Expirated24HChecklist");
                });

            modelBuilder.Entity("Entekra.Data.Models.ExtensionsDataList", b =>
                {
                    b.Property<int>("ExtensionsDataListId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CheckListId")
                        .HasColumnType("int");

                    b.Property<string>("Comment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ExtensionsDataListExternalId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ExtensionsDataListId")
                        .HasName("PK_ExtensionsDataListId")
                        .HasAnnotation("SqlServer:Clustered", false);

                    b.HasIndex("CheckListId");

                    b.ToTable("ExtensionsDataList");
                });

            modelBuilder.Entity("Entekra.Data.Models.Issue", b =>
                {
                    b.Property<int>("IssueId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ExtensionsDataListId")
                        .HasColumnType("int");

                    b.Property<string>("InspectionType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("IssueExternalId")
                        .HasColumnType("int");

                    b.Property<string>("IssueNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProjectId")
                        .HasColumnType("int");

                    b.HasKey("IssueId")
                        .HasName("PK_IssuesId")
                        .HasAnnotation("SqlServer:Clustered", false);

                    b.HasIndex("ExtensionsDataListId");

                    b.HasIndex("ProjectId");

                    b.ToTable("Issue");
                });

            modelBuilder.Entity("Entekra.Data.Models.Project", b =>
                {
                    b.Property<int>("ProjectId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Number")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProjectExternalId")
                        .HasColumnType("int");

                    b.HasKey("ProjectId")
                        .HasName("PK_ProjectsId")
                        .HasAnnotation("SqlServer:Clustered", false);

                    b.HasIndex("ProjectId")
                        .IsUnique()
                        .HasName("UK_Projects_ProjectId");

                    b.ToTable("Project");
                });

            modelBuilder.Entity("Entekra.Data.Models.Checklist", b =>
                {
                    b.HasOne("Entekra.Data.Models.Project", "Project")
                        .WithMany("Checklist")
                        .HasForeignKey("ProjectId");
                });

            modelBuilder.Entity("Entekra.Data.Models.ExtensionsDataList", b =>
                {
                    b.HasOne("Entekra.Data.Models.Checklist", "CheckList")
                        .WithMany("ExtensionsDataList")
                        .HasForeignKey("CheckListId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Entekra.Data.Models.Issue", b =>
                {
                    b.HasOne("Entekra.Data.Models.ExtensionsDataList", "ExtensionsDataList")
                        .WithMany("AttachedIssues")
                        .HasForeignKey("ExtensionsDataListId");

                    b.HasOne("Entekra.Data.Models.Project", "Project")
                        .WithMany("Issues")
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
